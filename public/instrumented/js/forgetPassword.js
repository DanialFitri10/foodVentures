function cov_1nwlhyc8zd(){var path="C:\\Users\\dania\\Documents\\DVOPS_Projects\\missme\\foodVentures\\public\\js\\forgetPassword.js";var hash="efaffaa1a8361a1302677c62355ace7362019028";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\dania\\Documents\\DVOPS_Projects\\missme\\foodVentures\\public\\js\\forgetPassword.js",statementMap:{"0":{start:{line:42,column:16},end:{line:42,column:34}},"1":{start:{line:43,column:19},end:{line:43,column:40}},"2":{start:{line:44,column:12},end:{line:44,column:21}},"3":{start:{line:45,column:13},end:{line:45,column:17}},"4":{start:{line:47,column:0},end:{line:47,column:24}},"5":{start:{line:49,column:13},end:{line:52,column:1}},"6":{start:{line:54,column:0},end:{line:79,column:3}},"7":{start:{line:55,column:4},end:{line:78,column:5}},"8":{start:{line:56,column:28},end:{line:64,column:10}},"9":{start:{line:66,column:21},end:{line:71,column:10}},"10":{start:{line:73,column:8},end:{line:73,column:53}},"11":{start:{line:74,column:8},end:{line:74,column:56}},"12":{start:{line:76,column:8},end:{line:76,column:29}},"13":{start:{line:77,column:8},end:{line:77,column:52}},"14":{start:{line:81,column:0},end:{line:83,column:3}},"15":{start:{line:82,column:4},end:{line:82,column:53}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:54,column:24},end:{line:54,column:25}},loc:{start:{line:54,column:44},end:{line:79,column:1}},line:54},"1":{name:"(anonymous_1)",decl:{start:{line:81,column:17},end:{line:81,column:18}},loc:{start:{line:81,column:23},end:{line:83,column:1}},line:81}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"efaffaa1a8361a1302677c62355ace7362019028"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1nwlhyc8zd=function(){return actualCoverage;};}return actualCoverage;}cov_1nwlhyc8zd();// // forgetPassword.js
// const nodeMailer = require('nodemailer');
// const html = `
//     <h1>Hello!</h1>
//     <p>This email is for you to reset your password. Thanks!</p>
// `;
// async function forgetPassword() {
//     const transporter = nodeMailer.createTransport({
//         host: "mail.openjavascript.info", // SMTP server address (usually mail.your-domain.com)
//         port: 465, // Port for SMTP (usually 465)
//         secure: true, // Usually true if connecting to port 465
//         auth: {
//             user: "test@openjavascipt.info", // Your email address
//             pass: "NodeMailer123!",
//         }
//     });
//     const info = await transporter.sendMail({
//         from: 'OpenJavaScript <test@javascript.info>',
//         to: 'test2@openjavascript.info',
//         subject: 'Testing, testing, 123',
//         html: html,
//     })
//     console.log("Message sent" + info.messageId);
// }
// forgetPassword()
// .catch(e => console.log(e));
// //function forgetPassword() {
// //    const email = document.getElementById('email').value;
// // redirects the user to a page where user can input their email for reset of password
// //    window.location.href = 'password_reset_sent.html';
// //}
// server.js
const express=(cov_1nwlhyc8zd().s[0]++,require('express'));const nodeMailer=(cov_1nwlhyc8zd().s[1]++,require('nodemailer'));const app=(cov_1nwlhyc8zd().s[2]++,express());const port=(cov_1nwlhyc8zd().s[3]++,3000);cov_1nwlhyc8zd().s[4]++;app.use(express.json());const html=(cov_1nwlhyc8zd().s[5]++,`
    <h1>Hello!</h1>
    <p>This email is for you to reset your password. Thanks!</p>
`);cov_1nwlhyc8zd().s[6]++;app.post('/send-email',async(req,res)=>{cov_1nwlhyc8zd().f[0]++;cov_1nwlhyc8zd().s[7]++;try{const transporter=(cov_1nwlhyc8zd().s[8]++,nodeMailer.createTransport({host:"mail.openjavascript.info",port:465,secure:true,auth:{user:"test@openjavascript.info",pass:"NodeMailer123!"}}));const info=(cov_1nwlhyc8zd().s[9]++,await transporter.sendMail({from:'OpenJavaScript <test@javascript.info>',to:'carasim80@gmail.com',// assuming you pass the email address through the request body
subject:'Testing, testing, 123',html:html}));cov_1nwlhyc8zd().s[10]++;console.log("Message sent"+info.messageId);cov_1nwlhyc8zd().s[11]++;res.status(200).send('Email sent successfully');}catch(error){cov_1nwlhyc8zd().s[12]++;console.error(error);cov_1nwlhyc8zd().s[13]++;res.status(500).send('Error sending email');}});cov_1nwlhyc8zd().s[14]++;app.listen(port,()=>{cov_1nwlhyc8zd().f[1]++;cov_1nwlhyc8zd().s[15]++;console.log(`Server is running on port ${port}`);});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW53bGh5Yzh6ZCIsImFjdHVhbENvdmVyYWdlIiwiZXhwcmVzcyIsInMiLCJyZXF1aXJlIiwibm9kZU1haWxlciIsImFwcCIsInBvcnQiLCJ1c2UiLCJqc29uIiwiaHRtbCIsInBvc3QiLCJyZXEiLCJyZXMiLCJmIiwidHJhbnNwb3J0ZXIiLCJjcmVhdGVUcmFuc3BvcnQiLCJob3N0Iiwic2VjdXJlIiwiYXV0aCIsInVzZXIiLCJwYXNzIiwiaW5mbyIsInNlbmRNYWlsIiwiZnJvbSIsInRvIiwic3ViamVjdCIsImNvbnNvbGUiLCJsb2ciLCJtZXNzYWdlSWQiLCJzdGF0dXMiLCJzZW5kIiwiZXJyb3IiLCJsaXN0ZW4iXSwic291cmNlcyI6WyJmb3JnZXRQYXNzd29yZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvLyBmb3JnZXRQYXNzd29yZC5qc1xuLy8gY29uc3Qgbm9kZU1haWxlciA9IHJlcXVpcmUoJ25vZGVtYWlsZXInKTtcblxuLy8gY29uc3QgaHRtbCA9IGBcbi8vICAgICA8aDE+SGVsbG8hPC9oMT5cbi8vICAgICA8cD5UaGlzIGVtYWlsIGlzIGZvciB5b3UgdG8gcmVzZXQgeW91ciBwYXNzd29yZC4gVGhhbmtzITwvcD5cbi8vIGA7XG5cbi8vIGFzeW5jIGZ1bmN0aW9uIGZvcmdldFBhc3N3b3JkKCkge1xuXG4vLyAgICAgY29uc3QgdHJhbnNwb3J0ZXIgPSBub2RlTWFpbGVyLmNyZWF0ZVRyYW5zcG9ydCh7XG4vLyAgICAgICAgIGhvc3Q6IFwibWFpbC5vcGVuamF2YXNjcmlwdC5pbmZvXCIsIC8vIFNNVFAgc2VydmVyIGFkZHJlc3MgKHVzdWFsbHkgbWFpbC55b3VyLWRvbWFpbi5jb20pXG4vLyAgICAgICAgIHBvcnQ6IDQ2NSwgLy8gUG9ydCBmb3IgU01UUCAodXN1YWxseSA0NjUpXG4vLyAgICAgICAgIHNlY3VyZTogdHJ1ZSwgLy8gVXN1YWxseSB0cnVlIGlmIGNvbm5lY3RpbmcgdG8gcG9ydCA0NjVcbi8vICAgICAgICAgYXV0aDoge1xuLy8gICAgICAgICAgICAgdXNlcjogXCJ0ZXN0QG9wZW5qYXZhc2NpcHQuaW5mb1wiLCAvLyBZb3VyIGVtYWlsIGFkZHJlc3Ncbi8vICAgICAgICAgICAgIHBhc3M6IFwiTm9kZU1haWxlcjEyMyFcIixcbi8vICAgICAgICAgfVxuLy8gICAgIH0pO1xuXG4vLyAgICAgY29uc3QgaW5mbyA9IGF3YWl0IHRyYW5zcG9ydGVyLnNlbmRNYWlsKHtcbi8vICAgICAgICAgZnJvbTogJ09wZW5KYXZhU2NyaXB0IDx0ZXN0QGphdmFzY3JpcHQuaW5mbz4nLFxuLy8gICAgICAgICB0bzogJ3Rlc3QyQG9wZW5qYXZhc2NyaXB0LmluZm8nLFxuLy8gICAgICAgICBzdWJqZWN0OiAnVGVzdGluZywgdGVzdGluZywgMTIzJyxcbi8vICAgICAgICAgaHRtbDogaHRtbCxcbi8vICAgICB9KVxuXG4vLyAgICAgY29uc29sZS5sb2coXCJNZXNzYWdlIHNlbnRcIiArIGluZm8ubWVzc2FnZUlkKTtcbi8vIH1cblxuLy8gZm9yZ2V0UGFzc3dvcmQoKVxuLy8gLmNhdGNoKGUgPT4gY29uc29sZS5sb2coZSkpO1xuXG4vLyAvL2Z1bmN0aW9uIGZvcmdldFBhc3N3b3JkKCkge1xuLy8gLy8gICAgY29uc3QgZW1haWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZW1haWwnKS52YWx1ZTtcblxuLy8gLy8gcmVkaXJlY3RzIHRoZSB1c2VyIHRvIGEgcGFnZSB3aGVyZSB1c2VyIGNhbiBpbnB1dCB0aGVpciBlbWFpbCBmb3IgcmVzZXQgb2YgcGFzc3dvcmRcbi8vIC8vICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJ3Bhc3N3b3JkX3Jlc2V0X3NlbnQuaHRtbCc7XG4vLyAvL31cblxuLy8gc2VydmVyLmpzXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3Qgbm9kZU1haWxlciA9IHJlcXVpcmUoJ25vZGVtYWlsZXInKTtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHBvcnQgPSAzMDAwO1xuXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcblxuY29uc3QgaHRtbCA9IGBcbiAgICA8aDE+SGVsbG8hPC9oMT5cbiAgICA8cD5UaGlzIGVtYWlsIGlzIGZvciB5b3UgdG8gcmVzZXQgeW91ciBwYXNzd29yZC4gVGhhbmtzITwvcD5cbmA7XG5cbmFwcC5wb3N0KCcvc2VuZC1lbWFpbCcsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHRyYW5zcG9ydGVyID0gbm9kZU1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xuICAgICAgICAgICAgaG9zdDogXCJtYWlsLm9wZW5qYXZhc2NyaXB0LmluZm9cIixcbiAgICAgICAgICAgIHBvcnQ6IDQ2NSxcbiAgICAgICAgICAgIHNlY3VyZTogdHJ1ZSxcbiAgICAgICAgICAgIGF1dGg6IHtcbiAgICAgICAgICAgICAgICB1c2VyOiBcInRlc3RAb3BlbmphdmFzY3JpcHQuaW5mb1wiLFxuICAgICAgICAgICAgICAgIHBhc3M6IFwiTm9kZU1haWxlcjEyMyFcIixcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgaW5mbyA9IGF3YWl0IHRyYW5zcG9ydGVyLnNlbmRNYWlsKHtcbiAgICAgICAgICAgIGZyb206ICdPcGVuSmF2YVNjcmlwdCA8dGVzdEBqYXZhc2NyaXB0LmluZm8+JyxcbiAgICAgICAgICAgIHRvOiAnY2FyYXNpbTgwQGdtYWlsLmNvbScsIC8vIGFzc3VtaW5nIHlvdSBwYXNzIHRoZSBlbWFpbCBhZGRyZXNzIHRocm91Z2ggdGhlIHJlcXVlc3QgYm9keVxuICAgICAgICAgICAgc3ViamVjdDogJ1Rlc3RpbmcsIHRlc3RpbmcsIDEyMycsXG4gICAgICAgICAgICBodG1sOiBodG1sLFxuICAgICAgICB9KTtcblxuICAgICAgICBjb25zb2xlLmxvZyhcIk1lc3NhZ2Ugc2VudFwiICsgaW5mby5tZXNzYWdlSWQpO1xuICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZCgnRW1haWwgc2VudCBzdWNjZXNzZnVsbHknKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0Vycm9yIHNlbmRpbmcgZW1haWwnKTtcbiAgICB9XG59KTtcblxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYFNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgJHtwb3J0fWApO1xufSk7XG4iXSwibWFwcGluZ3MiOiI2N0RBZVk7QUFBQUEsY0FBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxjQUFBLEdBZlo7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBLEtBQU0sQ0FBQUUsT0FBTyxFQUFBRixjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUNsQyxLQUFNLENBQUFDLFVBQVUsRUFBQUwsY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFDeEMsS0FBTSxDQUFBRSxHQUFHLEVBQUFOLGNBQUEsR0FBQUcsQ0FBQSxNQUFHRCxPQUFPLENBQUMsQ0FBQyxFQUNyQixLQUFNLENBQUFLLElBQUksRUFBQVAsY0FBQSxHQUFBRyxDQUFBLE1BQUcsSUFBSSxFQUFDSCxjQUFBLEdBQUFHLENBQUEsTUFFbEJHLEdBQUcsQ0FBQ0UsR0FBRyxDQUFDTixPQUFPLENBQUNPLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FFdkIsS0FBTSxDQUFBQyxJQUFJLEVBQUFWLGNBQUEsR0FBQUcsQ0FBQSxNQUFJO0FBQ2Q7QUFDQTtBQUNBLENBQUMsRUFBQ0gsY0FBQSxHQUFBRyxDQUFBLE1BRUZHLEdBQUcsQ0FBQ0ssSUFBSSxDQUFDLGFBQWEsQ0FBRSxNQUFPQyxHQUFHLENBQUVDLEdBQUcsR0FBSyxDQUFBYixjQUFBLEdBQUFjLENBQUEsTUFBQWQsY0FBQSxHQUFBRyxDQUFBLE1BQ3hDLEdBQUksQ0FDQSxLQUFNLENBQUFZLFdBQVcsRUFBQWYsY0FBQSxHQUFBRyxDQUFBLE1BQUdFLFVBQVUsQ0FBQ1csZUFBZSxDQUFDLENBQzNDQyxJQUFJLENBQUUsMEJBQTBCLENBQ2hDVixJQUFJLENBQUUsR0FBRyxDQUNUVyxNQUFNLENBQUUsSUFBSSxDQUNaQyxJQUFJLENBQUUsQ0FDRkMsSUFBSSxDQUFFLDBCQUEwQixDQUNoQ0MsSUFBSSxDQUFFLGdCQUNWLENBQ0osQ0FBQyxDQUFDLEVBRUYsS0FBTSxDQUFBQyxJQUFJLEVBQUF0QixjQUFBLEdBQUFHLENBQUEsTUFBRyxLQUFNLENBQUFZLFdBQVcsQ0FBQ1EsUUFBUSxDQUFDLENBQ3BDQyxJQUFJLENBQUUsdUNBQXVDLENBQzdDQyxFQUFFLENBQUUscUJBQXFCLENBQUU7QUFDM0JDLE9BQU8sQ0FBRSx1QkFBdUIsQ0FDaENoQixJQUFJLENBQUVBLElBQ1YsQ0FBQyxDQUFDLEVBQUNWLGNBQUEsR0FBQUcsQ0FBQSxPQUVId0IsT0FBTyxDQUFDQyxHQUFHLENBQUMsY0FBYyxDQUFHTixJQUFJLENBQUNPLFNBQVMsQ0FBQyxDQUFDN0IsY0FBQSxHQUFBRyxDQUFBLE9BQzdDVSxHQUFHLENBQUNpQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxDQUNuRCxDQUFFLE1BQU9DLEtBQUssQ0FBRSxDQUFBaEMsY0FBQSxHQUFBRyxDQUFBLE9BQ1p3QixPQUFPLENBQUNLLEtBQUssQ0FBQ0EsS0FBSyxDQUFDLENBQUNoQyxjQUFBLEdBQUFHLENBQUEsT0FDckJVLEdBQUcsQ0FBQ2lCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQy9DLENBQ0osQ0FBQyxDQUFDLENBQUMvQixjQUFBLEdBQUFHLENBQUEsT0FFSEcsR0FBRyxDQUFDMkIsTUFBTSxDQUFDMUIsSUFBSSxDQUFFLElBQU0sQ0FBQVAsY0FBQSxHQUFBYyxDQUFBLE1BQUFkLGNBQUEsR0FBQUcsQ0FBQSxPQUNuQndCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFFLDZCQUE0QnJCLElBQUssRUFBQyxDQUFDLENBQ3BELENBQUMsQ0FBQyJ9